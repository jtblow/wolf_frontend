'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _util = require('../util');

var _util2 = _interopRequireDefault(_util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Collapse = function (_PureComponent) {
  _inherits(Collapse, _PureComponent);

  function Collapse(props) {
    _classCallCheck(this, Collapse);

    var _this = _possibleConstructorReturn(this, (Collapse.__proto__ || Object.getPrototypeOf(Collapse)).call(this, props));

    _this.onTransitionEnd = _this.onTransitionEnd.bind(_this);
    _this.setExpanded = _this.setExpanded.bind(_this);
    _this.setCollapsed = _this.setCollapsed.bind(_this);

    _this.state = {
      willChange: 'height',
      height: '0',
      overflow: 'hidden',
      visibility: 'hidden',
      transition: props.transition
    };
    return _this;
  }

  _createClass(Collapse, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.content && this.props.isOpen) {
        this.setExpanded();
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (!this.content) {
        return;
      }

      // If the transition is changed lets update it
      if (nextProps.transition !== this.props.transition) {
        this.setState({ transition: nextProps.transition });
      }

      // expand
      if (!this.props.isOpen && nextProps.isOpen) {
        // have the element transition to the height of its inner content
        this.setState({
          height: this.getHeight() + 'px',
          visibility: 'visible'
        });
      }

      // collapse
      if (this.props.isOpen && !nextProps.isOpen) {
        // explicitly set the element's height to its current pixel height, so we
        // aren't transitioning out of 'auto'
        this.setState({ height: this.getHeight() + 'px' });
        _util2.default.requestAnimationFrame(function () {
          // "pausing" the JavaScript execution to let the rendering threads catch up
          // http://stackoverflow.com/questions/779379/why-is-settimeoutfn-0-sometimes-useful
          setTimeout(function () {
            _this2.setState({
              height: '0',
              overflow: 'hidden'
            });
          });
        });
      }
    }
  }, {
    key: 'onTransitionEnd',
    value: function onTransitionEnd(e) {
      var _props = this.props,
          onRest = _props.onRest,
          isOpen = _props.isOpen;


      if (e.target === this.content && e.propertyName === 'height') {
        if (isOpen) {
          this.setExpanded();
        } else {
          this.setCollapsed();
        }
        if (onRest) {
          onRest();
        }
      }
    }
  }, {
    key: 'getHeight',
    value: function getHeight() {
      return this.content.scrollHeight;
    }
  }, {
    key: 'setCollapsed',
    value: function setCollapsed() {
      this.setState({ visibility: 'hidden' });
    }
  }, {
    key: 'setExpanded',
    value: function setExpanded() {
      this.setState({
        height: 'auto',
        overflow: 'visible',
        visibility: 'visible'
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props2 = this.props,
          className = _props2.className,
          children = _props2.children,
          isOpen = _props2.isOpen,
          transition = _props2.transition,
          onRest = _props2.onRest,
          attrs = _objectWithoutProperties(_props2, ['className', 'children', 'isOpen', 'transition', 'onRest']);

      return _react2.default.createElement(
        'div',
        _extends({
          ref: function ref(el) {
            _this3.content = el;
          },
          style: this.state,
          className: className,
          onTransitionEnd: this.onTransitionEnd
        }, attrs),
        children
      );
    }
  }]);

  return Collapse;
}(_react.PureComponent);

Collapse.displayName = 'Collapse';

Collapse.defaultProps = {
  children: null,
  className: 'react-css-collapse-transition',
  isOpen: false,
  transition: null,
  onRest: null
};

Collapse.propTypes = {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  isOpen: _propTypes2.default.bool,
  transition: _propTypes2.default.string,
  onRest: _propTypes2.default.func
};

exports.default = Collapse;
//# sourceMappingURL=Collapse.js.map