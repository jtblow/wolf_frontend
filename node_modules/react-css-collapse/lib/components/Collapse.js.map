{"version":3,"sources":["../../src/components/Collapse.jsx"],"names":["Collapse","props","onTransitionEnd","bind","setExpanded","setCollapsed","state","willChange","height","overflow","visibility","transition","content","isOpen","nextProps","setState","getHeight","util","requestAnimationFrame","setTimeout","e","onRest","target","propertyName","scrollHeight","className","children","attrs","el","PureComponent","displayName","defaultProps","propTypes","PropTypes","node","string","bool","func"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEMA,Q;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAEjB,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,OAAvB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,OAAnB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,OAApB;;AAEA,UAAKG,KAAL,GAAa;AACXC,kBAAY,QADD;AAEXC,cAAQ,GAFG;AAGXC,gBAAU,QAHC;AAIXC,kBAAY,QAJD;AAKXC,kBAAYV,MAAMU;AALP,KAAb;AANiB;AAalB;;;;wCAEmB;AAClB,UAAI,KAAKC,OAAL,IAAgB,KAAKX,KAAL,CAAWY,MAA/B,EAAuC;AACrC,aAAKT,WAAL;AACD;AACF;;;8CAEyBU,S,EAAW;AAAA;;AACnC,UAAI,CAAC,KAAKF,OAAV,EAAmB;AACjB;AACD;;AAED;AACA,UAAIE,UAAUH,UAAV,KAAyB,KAAKV,KAAL,CAAWU,UAAxC,EAAoD;AAClD,aAAKI,QAAL,CAAc,EAAEJ,YAAYG,UAAUH,UAAxB,EAAd;AACD;;AAED;AACA,UAAI,CAAC,KAAKV,KAAL,CAAWY,MAAZ,IAAsBC,UAAUD,MAApC,EAA4C;AAC1C;AACA,aAAKE,QAAL,CAAc;AACZP,kBAAW,KAAKQ,SAAL,EAAX,OADY;AAEZN,sBAAY;AAFA,SAAd;AAID;;AAED;AACA,UAAI,KAAKT,KAAL,CAAWY,MAAX,IAAqB,CAACC,UAAUD,MAApC,EAA4C;AAC1C;AACA;AACA,aAAKE,QAAL,CAAc,EAAEP,QAAW,KAAKQ,SAAL,EAAX,OAAF,EAAd;AACAC,uBAAKC,qBAAL,CAA2B,YAAM;AAC/B;AACA;AACAC,qBAAW,YAAM;AACf,mBAAKJ,QAAL,CAAc;AACZP,sBAAQ,GADI;AAEZC,wBAAU;AAFE,aAAd;AAID,WALD;AAMD,SATD;AAUD;AACF;;;oCAEeW,C,EAAG;AAAA,mBACU,KAAKnB,KADf;AAAA,UACToB,MADS,UACTA,MADS;AAAA,UACDR,MADC,UACDA,MADC;;;AAGjB,UAAIO,EAAEE,MAAF,KAAa,KAAKV,OAAlB,IAA6BQ,EAAEG,YAAF,KAAmB,QAApD,EAA8D;AAC5D,YAAIV,MAAJ,EAAY;AACV,eAAKT,WAAL;AACD,SAFD,MAEO;AACL,eAAKC,YAAL;AACD;AACD,YAAIgB,MAAJ,EAAY;AACVA;AACD;AACF;AACF;;;gCAEW;AACV,aAAO,KAAKT,OAAL,CAAaY,YAApB;AACD;;;mCAEc;AACb,WAAKT,QAAL,CAAc,EAAEL,YAAY,QAAd,EAAd;AACD;;;kCAEa;AACZ,WAAKK,QAAL,CAAc;AACZP,gBAAQ,MADI;AAEZC,kBAAU,SAFE;AAGZC,oBAAY;AAHA,OAAd;AAKD;;;6BAEQ;AAAA;;AAAA,oBAQH,KAAKT,KARF;AAAA,UAELwB,SAFK,WAELA,SAFK;AAAA,UAGLC,QAHK,WAGLA,QAHK;AAAA,UAILb,MAJK,WAILA,MAJK;AAAA,UAKLF,UALK,WAKLA,UALK;AAAA,UAMLU,MANK,WAMLA,MANK;AAAA,UAOFM,KAPE;;AASP,aACE;AAAA;AAAA;AACE,eAAK,aAACC,EAAD,EAAQ;AACX,mBAAKhB,OAAL,GAAegB,EAAf;AACD,WAHH;AAIE,iBAAO,KAAKtB,KAJd;AAKE,qBAAWmB,SALb;AAME,2BAAiB,KAAKvB;AANxB,WAOMyB,KAPN;AASGD;AATH,OADF;AAaD;;;;EAhHoBG,oB;;AAmHvB7B,SAAS8B,WAAT,GAAuB,UAAvB;;AAEA9B,SAAS+B,YAAT,GAAwB;AACtBL,YAAU,IADY;AAEtBD,aAAW,+BAFW;AAGtBZ,UAAQ,KAHc;AAItBF,cAAY,IAJU;AAKtBU,UAAQ;AALc,CAAxB;;AAQArB,SAASgC,SAAT,GAAqB;AACnBN,YAAUO,oBAAUC,IADD;AAEnBT,aAAWQ,oBAAUE,MAFF;AAGnBtB,UAAQoB,oBAAUG,IAHC;AAInBzB,cAAYsB,oBAAUE,MAJH;AAKnBd,UAAQY,oBAAUI;AALC,CAArB;;kBAQerC,Q","file":"Collapse.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport util from '../util';\n\nclass Collapse extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.onTransitionEnd = this.onTransitionEnd.bind(this);\n    this.setExpanded = this.setExpanded.bind(this);\n    this.setCollapsed = this.setCollapsed.bind(this);\n\n    this.state = {\n      willChange: 'height',\n      height: '0',\n      overflow: 'hidden',\n      visibility: 'hidden',\n      transition: props.transition,\n    };\n  }\n\n  componentDidMount() {\n    if (this.content && this.props.isOpen) {\n      this.setExpanded();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.content) {\n      return;\n    }\n\n    // If the transition is changed lets update it\n    if (nextProps.transition !== this.props.transition) {\n      this.setState({ transition: nextProps.transition });\n    }\n\n    // expand\n    if (!this.props.isOpen && nextProps.isOpen) {\n      // have the element transition to the height of its inner content\n      this.setState({\n        height: `${this.getHeight()}px`,\n        visibility: 'visible',\n      });\n    }\n\n    // collapse\n    if (this.props.isOpen && !nextProps.isOpen) {\n      // explicitly set the element's height to its current pixel height, so we\n      // aren't transitioning out of 'auto'\n      this.setState({ height: `${this.getHeight()}px` });\n      util.requestAnimationFrame(() => {\n        // \"pausing\" the JavaScript execution to let the rendering threads catch up\n        // http://stackoverflow.com/questions/779379/why-is-settimeoutfn-0-sometimes-useful\n        setTimeout(() => {\n          this.setState({\n            height: '0',\n            overflow: 'hidden',\n          });\n        });\n      });\n    }\n  }\n\n  onTransitionEnd(e) {\n    const { onRest, isOpen } = this.props;\n\n    if (e.target === this.content && e.propertyName === 'height') {\n      if (isOpen) {\n        this.setExpanded();\n      } else {\n        this.setCollapsed();\n      }\n      if (onRest) {\n        onRest();\n      }\n    }\n  }\n\n  getHeight() {\n    return this.content.scrollHeight;\n  }\n\n  setCollapsed() {\n    this.setState({ visibility: 'hidden' });\n  }\n\n  setExpanded() {\n    this.setState({\n      height: 'auto',\n      overflow: 'visible',\n      visibility: 'visible',\n    });\n  }\n\n  render() {\n    const {\n      className,\n      children,\n      isOpen,\n      transition,\n      onRest,\n      ...attrs\n    } = this.props;\n    return (\n      <div\n        ref={(el) => {\n          this.content = el;\n        }}\n        style={this.state}\n        className={className}\n        onTransitionEnd={this.onTransitionEnd}\n        {...attrs}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nCollapse.displayName = 'Collapse';\n\nCollapse.defaultProps = {\n  children: null,\n  className: 'react-css-collapse-transition',\n  isOpen: false,\n  transition: null,\n  onRest: null,\n};\n\nCollapse.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  isOpen: PropTypes.bool,\n  transition: PropTypes.string,\n  onRest: PropTypes.func,\n};\n\nexport default Collapse;\n"]}